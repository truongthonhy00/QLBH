/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.ProductManager;
import Model.Product;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ngong
 */
public class SuaMatHang extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public SuaMatHang() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        try {
            ProductManager pm = new ProductManager();
            Model model = new Model();
            this.listMH = pm.getListMH();
            this.tb_MH.setModel(model);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QLMatHang.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(QLMatHang.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
     List<Product> listMH = new ArrayList<>();
      private class Model extends DefaultTableModel{

        @Override
        public Object getValueAt(int row, int column) {
            switch (column){
                case 0: 
                    return listMH.get(row).getSttMH();
                case 1: 
                    return listMH.get(row).getMaMH();
                case 2: 
                    return listMH.get(row).getTenMH();
                case 3: 
                    return listMH.get(row).getLoaiMH();
                case 4: 
                    return listMH.get(row).getHangSX();
                case 5: 
                    return listMH.get(row).getSoLuong();
                case 6: 
                    return listMH.get(row).getDonGia();
            }
            return null;
        }

        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
        //"STT", "Mã mặt hàng", "Tên mặt hàng", "Loại mặt hàng", "Hãng sản xuất", "Số lượng", "Đơn giá"
        @Override
        public String getColumnName(int column) {
            switch (column){
                case 0: 
                    return "Số thứ tự";
                case 1: 
                    return "Mã mặt hàng";
                case 2: 
                    return "Tên mặt hàng";
                case 3: 
                    return "Loại mặt hàng";
                case 4: 
                    return "Hãng sản xuất";
                case 5: 
                    return "Số lượng";
                case 6: 
                    return "Đơn giá";
            }
            return null;
        }

        @Override
        public int getColumnCount() {
            return 7; 
        }

        @Override
        public int getRowCount() {
            return listMH.size(); 
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
     private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        lb_form = new javax.swing.JLabel();
        jc_search = new javax.swing.JComboBox<>();
        tf_search = new javax.swing.JTextField();
        lb_MaMH = new javax.swing.JLabel();
        Text_MaMH = new javax.swing.JLabel();
        lb_TenMH = new javax.swing.JLabel();
        tf_TenMH = new javax.swing.JTextField();
        lb_LoaiMH = new javax.swing.JLabel();
        tf_LoaiMH = new javax.swing.JTextField();
        lb_HangSX = new javax.swing.JLabel();
        tf_HangSX = new javax.swing.JTextField();
        lb_SoLuong = new javax.swing.JLabel();
        tf_SoLuong = new javax.swing.JTextField();
        lb_DonGia = new javax.swing.JLabel();
        tf_DonGia = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_MH = new javax.swing.JTable();
        jb_getdata = new javax.swing.JButton();
        jb_save = new javax.swing.JButton();
        jb_return = new javax.swing.JButton();
        vnd = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setOpaque(false);

        lb_form.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lb_form.setForeground(java.awt.Color.white);
        lb_form.setText("THAY ĐỔI THÔNG TIN MẶT HÀNG");

        jc_search.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jc_search.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tìm Mã", "Tìm Tên", "Tìm Loại", "Tìm Hãng" }));
        jc_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jc_searchActionPerformed(evt);
            }
        });

        lb_MaMH.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lb_MaMH.setForeground(new java.awt.Color(255, 255, 255));
        lb_MaMH.setText("Mã Mặt hàng:");

        Text_MaMH.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Text_MaMH.setForeground(new java.awt.Color(255, 255, 255));
        Text_MaMH.setText("0");

        lb_TenMH.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lb_TenMH.setForeground(new java.awt.Color(255, 255, 255));
        lb_TenMH.setText("Tên Mặt hàng:");

        lb_LoaiMH.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lb_LoaiMH.setForeground(new java.awt.Color(255, 255, 255));
        lb_LoaiMH.setText("Loại Mặt hàng:");

        lb_HangSX.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lb_HangSX.setForeground(new java.awt.Color(255, 255, 255));
        lb_HangSX.setText("Hãng Sản xuất:");

        lb_SoLuong.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lb_SoLuong.setForeground(new java.awt.Color(255, 255, 255));
        lb_SoLuong.setText("Số lượng:");

        lb_DonGia.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lb_DonGia.setForeground(new java.awt.Color(255, 255, 255));
        lb_DonGia.setText("Đơn giá:");

        tb_MH.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7"
            }
        ));
        jScrollPane1.setViewportView(tb_MH);

        jb_getdata.setBackground(new java.awt.Color(0, 102, 102));
        jb_getdata.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jb_getdata.setForeground(java.awt.Color.white);
        jb_getdata.setIcon(new javax.swing.ImageIcon("C:\\Users\\DELL\\Documents\\NetBeansProjects\\Code java\\QLBH\\display\\buttons\\lấy dữ liệu 23.png")); // NOI18N
        jb_getdata.setText("Lấy Dữ liệu");
        jb_getdata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_getdataActionPerformed(evt);
            }
        });

        jb_save.setBackground(new java.awt.Color(0, 102, 102));
        jb_save.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jb_save.setForeground(java.awt.Color.white);
        jb_save.setIcon(new javax.swing.ImageIcon("C:\\Users\\DELL\\Documents\\NetBeansProjects\\Code java\\QLBH\\display\\buttons\\lưu 23.png")); // NOI18N
        jb_save.setText("Lưu");
        jb_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_saveActionPerformed(evt);
            }
        });

        jb_return.setBackground(new java.awt.Color(0, 102, 102));
        jb_return.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jb_return.setForeground(java.awt.Color.white);
        jb_return.setIcon(new javax.swing.ImageIcon("C:\\Users\\DELL\\Documents\\NetBeansProjects\\Code java\\QLBH\\display\\buttons\\thoát 23.png")); // NOI18N
        jb_return.setText("Quay lại");
        jb_return.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_returnActionPerformed(evt);
            }
        });

        vnd.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        vnd.setForeground(new java.awt.Color(255, 255, 255));
        vnd.setText("VNĐ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addComponent(jb_getdata)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jb_save)
                .addGap(115, 115, 115)
                .addComponent(jb_return, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(121, 121, 121))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(lb_form))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 777, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lb_TenMH, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb_MaMH, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb_LoaiMH))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(tf_TenMH, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                                .addComponent(tf_LoaiMH))
                            .addComponent(Text_MaMH, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(141, 141, 141)
                                .addComponent(jc_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tf_search, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(69, 69, 69)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lb_DonGia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lb_HangSX, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lb_SoLuong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tf_SoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_HangSX, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(tf_DonGia, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(vnd)))))))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(lb_form)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jc_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb_MaMH)
                    .addComponent(Text_MaMH, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb_HangSX)
                    .addComponent(tf_HangSX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_TenMH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb_TenMH)
                    .addComponent(lb_SoLuong)
                    .addComponent(tf_SoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tf_LoaiMH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lb_LoaiMH))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tf_DonGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lb_DonGia)
                        .addComponent(vnd)))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jb_getdata)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jb_return, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jb_save)))
                .addGap(25, 25, 25))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jPanel1, gridBagConstraints);

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\DELL\\Documents\\NetBeansProjects\\Code java\\QLBH\\display\\backgrounds\\snow800x600.gif")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jLabel1, gridBagConstraints);

        pack();
    }// </editor-fold>           


    private void jb_getdataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_getdataActionPerformed
    try {
            ProductManager pm = new ProductManager(); 
            int row = -1;
            row = tb_MH.getSelectedRow();              //Lấy hàng được click
            if (row != -1) 
            {   
                String MaMH = (String) tb_MH.getValueAt(row, 1);  //Lấy giá trị của phần tử hàng được chọn, cột 0  

                   //Tạo mảng chứa ds mặt hàng được click
                List<Product> pd = pm.getListMH_follow_MaMH(MaMH); 

                  //Lấy dữ liệu của phần tử thứ 0 lên các Text(Vì trong mảng chỉ có 1 mặt hàng ở vị trí 0)
                Text_MaMH.setText(pd.get(0).getMaMH());
                tf_TenMH.setText(pd.get(0).getTenMH());
                tf_LoaiMH.setText(pd.get(0).getLoaiMH());
                tf_HangSX.setText(pd.get(0).getHangSX());
                tf_SoLuong.setText(String.valueOf(pd.get(0).getSoLuong()));
                tf_DonGia.setText(String.valueOf(pd.get(0).getDonGia()));
            } 
            else JOptionPane.showMessageDialog(null, "Vui lòng click vào hàng cần lấy dữ liệu!");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SuaMatHang.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(SuaMatHang.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void jc_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jc_searchActionPerformed
         String Search = jc_search.getSelectedItem().toString();
        switch(Search)
        {
            case "Tìm Mã":
            {
                   //Lấy dữ liệu từ ô tìm kiếm
                String Search_Text = tf_search.getText();
                   //Kiểm tra dữ liệu vừa lấy
                if (Search_Text.equals(""))
                {    
                    JOptionPane.showMessageDialog(null, "Vui lòng nhập dữ liệu muốn tìm kiếm vào ô trống");
                }
                else 
                {
                    try {
                        int check;
                        ProductManager pm = new ProductManager();
                           //Kiểm tra xem mã mặt hang nhập có đúng????
                        check = (pm.check_MaMH(Search_Text))?1:0;
                        switch(check){
                            case 0:
                            {
                                JOptionPane.showMessageDialog(null, "Mã mặt hàng không tồn tại");
                                tf_search.setText("");
                                break;
                            }
                            case 1:
                            {  
                                   //Đưa ds mặt hàng sau khi lọc tìm kiếm lên bảng
                                SuaMatHang.Model model = new SuaMatHang.Model();
                                this.listMH = pm.getListMH_follow_MaMH(Search_Text);
                                this.tb_MH.setModel(model);
                                JOptionPane.showMessageDialog(null, "Tìm kiếm thành công!");
                                break;
                            }      
                        }
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(QLMatHang.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (Exception ex) {
                        Logger.getLogger(QLMatHang.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                break;
            }
            case "Tìm Tên":
            {
                   //Lấy dữ liệu từ ô tìm kiếm
                String Search_Text = tf_search.getText();
                   //Kiểm tra dữ liệu vừa lấy
                if (Search_Text.equals(""))
                {    
                    JOptionPane.showMessageDialog(null, "Vui lòng nhập dữ liệu muốn tìm kiếm vào ô trống");
                }
                else 
                {
                    try {
                        int check;
                        ProductManager pm = new ProductManager();
                           //Kiểm tra xem Tên mặt hàng nhập có đúng????
                        check = (pm.Check_TenMH(Search_Text))?1:0;
                        switch(check){
                            case 0:
                            {
                                JOptionPane.showMessageDialog(null, "Tên mặt hàng không tồn tại");
                                tf_search.setText("");
                                break;
                            }
                            case 1:
                            { 
                                   //Đưa ds mặt hàng sau khi lọc tìm kiếm lên bảng
                                SuaMatHang.Model model = new SuaMatHang.Model();
                                this.listMH = pm.getListMH_follow_TenMH(Search_Text);
                                this.tb_MH.setModel(model);
                                JOptionPane.showMessageDialog(null, "Tìm kiếm thành công!");
                                break;
                            }      
                        }
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(QLMatHang.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (Exception ex) {
                        Logger.getLogger(QLMatHang.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                break;
            }
            case "Tìm Loại":
            {
                   //Lấy dữ liệu từ ô tìm kiếm
                String Search_Text = tf_search.getText();
                   //Kiểm tra dữ liệu vừa lấy
                if (Search_Text.equals(""))
                {    
                    JOptionPane.showMessageDialog(null, "Vui lòng nhập dữ liệu muốn tìm kiếm vào ô trống");
                }
                else 
                {
                    try {
                        int check;
                        ProductManager pm = new ProductManager();
                           //Kiểm tra xem Loại mặt hàng nhập có đúng????
                        check = (pm.Check_LoaiMH(Search_Text))?1:0;
                        switch(check){
                            case 0:
                            {
                                JOptionPane.showMessageDialog(null, "Loại mặt hàng không tồn tại");
                                tf_search.setText("");
                                break;
                            }
                            case 1:
                            { 
                                   //Đưa ds mặt hàng sau khi lọc tìm kiếm lên bảng
                                SuaMatHang.Model model = new SuaMatHang.Model();
                                this.listMH = pm.getListMH_follow_LoaiMH(Search_Text);
                                this.tb_MH.setModel(model);
                                JOptionPane.showMessageDialog(null, "Tìm kiếm thành công!");
                                break;
                            }      
                        }
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(QLMatHang.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (Exception ex) {
                        Logger.getLogger(QLMatHang.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                break;
            }
           case "Tìm Hãng":
               {
                   //Lấy dữ liệu từ ô tìm kiếm
                String Search_Text = tf_search.getText();
                   //Kiểm tra dữ liệu vừa lấy
                if (Search_Text.equals(""))
                {    
                    JOptionPane.showMessageDialog(null, "Vui lòng nhập dữ liệu muốn tìm kiếm vào ô trống");
                }
                else 
                {
                    try {
                        int check;
                        ProductManager pm = new ProductManager();
                           //Kiểm tra xem Hãng sản xuất nhập có đúng????
                        check = (pm.Check_HangSX(Search_Text))?1:0;
                        switch(check){
                            case 0:
                            {
                                JOptionPane.showMessageDialog(null, "Loại mặt hàng không tồn tại");
                                tf_search.setText("");
                                break;
                            }
                            case 1:
                            { 
                                   //Đưa ds mặt hàng sau khi lọc tìm kiếm lên bảng
                               SuaMatHang.Model model = new SuaMatHang.Model();
                                this.listMH = pm.getListMH_follow_HangSX(Search_Text);
                                this.tb_MH.setModel(model);
                                JOptionPane.showMessageDialog(null, "Tìm kiếm thành công!");
                                break;
                            }      
                        }
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(QLMatHang.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (Exception ex) {
                        Logger.getLogger(QLMatHang.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                break;
            }
        }
    }


    private void jb_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_saveActionPerformed
            //Xử lý lỗi để trống
        if (Text_MaMH.getText().equals("") || tf_TenMH.getText().equals("") || tf_LoaiMH.getText().equals("") || tf_HangSX.getText().equals("")||tf_SoLuong.getText().equals("")||tf_DonGia.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Vui lòng điền đầy đủ thông tin!");
        }
        else 
        {
            int flag = 0;
            try {      
                String MaMH = Text_MaMH.getText();
                String TenMH = tf_TenMH.getText();
                String LoaiMH = tf_LoaiMH.getText();
                String HangSX = tf_HangSX.getText();
                flag = 1;
                int SoLuong = Integer.parseInt(tf_SoLuong.getText());
                flag = 2;
                int DonGia = Integer.parseInt(tf_DonGia.getText());
                try{
                    ProductManager pm = new ProductManager();
                    pm.updateMH_After_Repair(MaMH,TenMH,LoaiMH,HangSX,SoLuong,DonGia);
                    JOptionPane.showMessageDialog(null, "Thay đổi thông tin mặt hàng thành công!");

                       //Xóa dữ liệu trên các Text

                    Text_MaMH.setText("");
                    tf_TenMH.setText("");
                    tf_LoaiMH.setText("");
                    tf_HangSX.setText("");
                    tf_SoLuong.setText("");
                    tf_DonGia.setText("");

                       //Cập nhật lại bảng
                    Model model = new Model();
                    this.listMH = pm.getListMH();
                    this.tb_MH.setModel(model);  
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(SuaNhanVien.class.getName()).log(Level.SEVERE, null, ex);
                } catch (Exception ex) {
                    Logger.getLogger(SuaNhanVien.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            catch (NumberFormatException ex){
                switch(flag)
                {
                    case 1:
                    {
                        JOptionPane.showMessageDialog(null, "Rất tiếc, bạn đã nhập sai định dạng cho số lượng!\nVui lòng nhập lại!");
                        tf_SoLuong.setText("");
                        break;
                    }
                    case 2:
                    {
                        JOptionPane.showMessageDialog(null, "Rất tiếc, bạn đã nhập sai định dạng cho đơn giá!\nVui lòng nhập lại!");
                        tf_DonGia.setText("");
                        break;
                    }
                }
            } 
        }
    }

    private void jb_returnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_returnActionPerformed
         this.setVisible(false);
    }




    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jb_getdata;
    private javax.swing.JButton jb_return;
    private javax.swing.JButton jb_save;
    private javax.swing.JComboBox<String> jc_search;
    private javax.swing.JLabel lb_DonGia;
    private javax.swing.JLabel lb_HangSX;
    private javax.swing.JLabel lb_LoaiMH;
    private javax.swing.JLabel lb_MaMH;
    private javax.swing.JLabel lb_SoLuong;
    private javax.swing.JLabel lb_TenMH;
    private javax.swing.JLabel lb_form;
    private javax.swing.JTable tb_MH;
    private javax.swing.JTextField tf_DonGia;
    private javax.swing.JTextField tf_HangSX;
    private javax.swing.JTextField tf_LoaiMH;
    private javax.swing.JLabel Text_MaMH;
    private javax.swing.JTextField tf_SoLuong;
    private javax.swing.JTextField tf_TenMH;
    private javax.swing.JTextField tf_search;
    private javax.swing.JLabel vnd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
}
